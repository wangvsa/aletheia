#	Runtime parameters for the Brio-Wu MHD shock-tube problem.
#	Please also look at default.par for more runtime parameters in the object directory

#	Specific heats ratio
gamma		= 2.0


#       Grid dimensionality and geometry
geometry	= "cartesian"


#	Size of computational volume
xmin		= 0.
xmax		= 1.
ymin		= 0.
ymax		= 1.


#	Boundary conditions
xl_boundary_type = "outflow"
xr_boundary_type = "outflow"
yl_boundary_type = "outflow"
yr_boundary_type = "outflow"


#	Parameters for initial model
#	Density, pressure, velocity and magnetic field
#	initial values on either side of the interface
rho_left	= 1.
rho_right	= 0.125
p_left		= 1.
p_right		= 0.1
u_left		= 0.
u_right		= 0.
v_left		= 0.
v_right		= 0.
w_left		= 0.
w_right		= 0.
by_left		= 1.
by_right	= -1.
b_normal	= 0.75


#	Angle and position of interface relative to x and y axes
#	Note: the StaggeredMesh solver only supports non-rotated setups
xangle		= 0.
yangle		= 90.
posn		= 0.5


#	Simulation (grid, time, I/O) parameters
run_comment	= "1D Brio-Wu MHD shock tube problem, parallel to x-axis"
log_file        = "bw_1d.log"
basenm          = "bw_1d_"
restart         = .false.
#plotFileNumber  = 1
nend            = 200
tmax            = 100000000000
cfl		= 0.8
plot_var_1	= "dens"
plot_var_2	= "temp"
plot_var_3	= "pres"

convertToConsvdInMeshInterp = .true.

#checkpoint file output parameters
checkpointFileIntervalTime = 0
checkpointFileIntervalStep = 1
checkpointFileNumber = 0

#plotfile output parameters
plotfileIntervalTime = 0.
plotfileIntervalStep = 0
plotfileNumber = 0

#	DivB control switch
killdivb	= .true.

#	Flux Conservation for AMR
flux_correct    = .true.

## -------------------------------------------------------------##
##  SWITCHES SPECIFIC TO THE UNSPLIT STAGGERED MESH MHD SOLVER  ##
#	I. INTERPOLATION SCHEME:
order		= 2      # Interpolation order (first/second/third/fifth order)
slopeLimiter    = "mc"   # Slope limiters (minmod, mc, vanLeer, hybrid, limited)
LimitedSlopeBeta= 1.     # Slope parameter for the "limited" slope by Toro
charLimiting	= .true. # Characteristic limiting vs. Primitive limiting

use_avisc	= .false. # use artificial viscosity (originally for PPM)
cvisc		= 0.1     # coefficient for artificial viscosity
use_flattening	= .false. # use flattening (dissipative) (originally for PPM)
use_steepening	= .false. # use contact steepening (originally for PPM)
use_upwindTVD	= .false. # use upwind biased TVD slope for PPM (need nguard=6)

#	II. RIEMANN SOLVERS:
RiemannSolver	= "Roe"       # Roe, HLL, HLLC, HLLD, LLF, Marquina
entropy         = .false.     # Entropy fix for the Roe solver

## -------------------------------------------------------------##

## ---------------------------------------------------------------##
##  SWITCHES SPECIFIC TO THE SUPER-TIME-STEPPING (STS) ALGORITHM  ##
##  NOTE: For details on using STS runtime parameters, please     ##
##        refer to user's guide (Driver chapter).                 ##
useSTS                  = .false.
nstepTotalSTS           = 5
nuSTS                   = 0.2
## ---------------------------------------------------------------##


#	The parameters below are only necessary for the Uniform Grid
iGridSize	= 480	#defined as nxb * iprocs
jGridSize	= 480	#defined as nyb * jprocs
kGridSize	= 1	#defined as nzb * kprocs
iProcs		= 4	#num procs in i direction
jProcs		= 2	#num procs in j direction
kProcs		= 1	#num procs in k direction

# When using UG, iProcs, jProcs and kProcs must be specified.
# These are the processors along each of the dimensions
# FIXEDBLOCKSIZE mode ::
#	When using fixed blocksize, iGridSize etc are redundant in
#	runtime parameters. These quantities are calculated as 
#	iGridSize = NXB*iprocs
#	jGridSize = NYB*jprocs
#	kGridSize = NZB*kprocs
# NONFIXEDBLOCKSIZE mode ::
#	iGridSize etc must be specified. They constitute the global
#	number of grid points in the physical domain without taking 
#	the guard cell into account. The local blocksize is calculated
#	as iGridSize/iprocs  etc.

plotfileMetadataDP = .true.
plotfileGridQuantityDP = .true.
